{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TokenStorageService } from 'app/services/auth/TokenStorage.Service';\nimport { PackageService } from 'app/services/package.service';\nimport { ProductService } from 'app/services/product.service';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nlet ConsulterColisComponent = class ConsulterColisComponent {\n  constructor(packageService, tokenStorage, productService, messageService, confirmationService) {\n    this.packageService = packageService;\n    this.tokenStorage = tokenStorage;\n    this.productService = productService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n  }\n\n  ngOnInit() {\n    this.productService.getProducts().then(data => this.products = data);\n    this.packageService.getpackagesByClient(this.tokenStorage.getUser()).subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  openNew() {\n    this.product = {};\n    this.submitted = false;\n    this.productDialog = true;\n  }\n\n  deleteSelectedProducts() {\n    this.confirmationService.confirm({\n      message: 'Are you sure you want to delete the selected products?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n        this.selectedProducts = null;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Products Deleted',\n          life: 3000\n        });\n      }\n    });\n  }\n\n  editProduct(product) {\n    this.product = { ...product\n    };\n    this.productDialog = true;\n  }\n\n  deleteProduct(product) {\n    this.confirmationService.confirm({\n      message: 'Are you sure you want to delete ' + product.name + '?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.products = this.products.filter(val => val.id !== product.id);\n        this.product = {};\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Product Deleted',\n          life: 3000\n        });\n      }\n    });\n  }\n\n  hideDialog() {\n    this.productDialog = false;\n    this.submitted = false;\n  }\n\n  saveProduct() {\n    this.submitted = true;\n\n    if (this.product.name.trim()) {\n      if (this.product.id) {\n        this.products[this.findIndexById(this.product.id)] = this.product;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Product Updated',\n          life: 3000\n        });\n      } else {\n        this.product.id = this.createId();\n        this.product.image = 'product-placeholder.svg';\n        this.products.push(this.product);\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Product Created',\n          life: 3000\n        });\n      }\n\n      this.products = [...this.products];\n      this.productDialog = false;\n      this.product = {};\n    }\n  }\n\n  findIndexById(id) {\n    let index = -1;\n\n    for (let i = 0; i < this.products.length; i++) {\n      if (this.products[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  createId() {\n    let id = '';\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < 5; i++) {\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n\n    return id;\n  }\n\n};\nConsulterColisComponent = __decorate([Component({\n  selector: 'app-consulter-colis',\n  templateUrl: './consulter-colis.component.html',\n  styles: [`\n  :host ::ng-deep .p-dialog .product-image {\n      width: 150px;\n      margin: 0 auto 2rem auto;\n      display: block;\n  }\n`],\n  styleUrls: ['./consulter-colis.component.scss']\n}), __metadata(\"design:paramtypes\", [PackageService, TokenStorageService, ProductService, MessageService, ConfirmationService])], ConsulterColisComponent);\nexport { ConsulterColisComponent };","map":null,"metadata":{},"sourceType":"module"}